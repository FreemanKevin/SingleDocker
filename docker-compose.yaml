#version: '3'
services:
  #nginx:
  #  image: "${NGINX_IMAGE}"
  #  #read_only: true
  #  deploy:
  #    resources:
  #      limits:
  #        memory: 4096M 
  #  container_name: nginx
  #  ports:
  #    - "${NGINX_HTTP_PORT}:80"
  #    #- "${NGINX_HTTPS_PORT}:443"
  #  environment:
  #    - TZ=Asia/Shanghai
  #  networks:
  #    - middleware
  #  healthcheck:
  #    test: ["CMD", "nginx", "-t"]
  #    interval: 30s
  #    timeout: 10s
  #    retries: 3
  #  volumes:
  #    - ./conf/web.conf:/etc/nginx/conf.d/default.conf:ro
  #    - ./certs:/etc/ssl/private:ro
  #    - ./html:/usr/share/nginx/html
  #    - /data/nginx/logs:/var/log/nginx:rw
  #  restart: always

  #minio-proxy:
  #  image: "${NGINX_IMAGE}"
  #  #read_only: true
  #  deploy:
  #    resources:
  #      limits:
  #        memory: 4096M 
  #  container_name: minio-proxy
  #  ports:
  #    - "${NGINX_PROXY_PORT}:443"
  #  environment:
  #    - TZ=Asia/Shanghai
  #  networks:
  #    - middleware
  #  healthcheck:
  #    test: ["CMD-SHELL", "nginx -t && ps aux | grep '[n]ginx: master process' || exit 1"]
  #    interval: 30s
  #    timeout: 10s
  #    retries: 3
  #  volumes:
  #    - ./conf/minio.conf:/etc/nginx/conf.d/default.conf:ro
  #    - ./certs:/etc/ssl/private:ro
  #  restart: always  

  #nacos:
  #  image: "${NACOS_IMAGE}"
  #  networks:
  #    - middleware
  #  #read_only: true
  #  deploy:
  #    resources:
  #      limits:
  #        memory: 4096M 
  #  container_name: nacos
  #  ports:
  #    - "${NACOS_PORT_1}:8848"
  #    - "${NACOS_PORT_2}:9848"
  #    - "${NACOS_PORT_3}:9849"
  #    - "${NACOS_PORT_4}:7848"
  #  environment:
  #    NACOS_AUTH_ENABLE: 'true'
  #  env_file:
  #    - ./conf/nacos-standlone.env
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - ./conf/nacos-application.properties:/home/nacos/conf/application.properties
  #    - /data/nacos/data/:/home/nacos/data
  #  restart: always



  #minio:
  #  image: "${MINIO_IMAGE}"
  #  #read_only: true
  #  deploy:
  #    resources:
  #      limits:
  #        memory: 4096M
  #  networks:
  #    - middleware 
  #  container_name: minio
  #  ports:
  #    - "${MINIO_PORT}:9000"
  #    - "${MINIO_CONSOLE_PORT}:9001"
  #  command: server /data --console-address ":9001"
  #  environment:
  #    MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
  #    MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
  #  healthcheck:
  #    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #    interval: 30s
  #    timeout: 10s
  #    retries: 3
  #    start_period: 30s
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - /data/minio/data:/data
  #  restart: always

  #redis:
  #  image: "${REDIS_IMAGE}"
  #  #read_only: true
  #  deploy:
  #    resources:
  #      limits:
  #        memory: 4096M
  #  container_name: redis
  #  networks:
  #    - middleware
  #  ports:
  #    - "${REDIS_PORT}:6379"
  #  command: [ "redis-server", "/usr/local/etc/redis/redis.conf"]
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
  #    - /data/redis/data:/data
  #  privileged: true
  #  healthcheck:
  #    test: ["CMD-SHELL", "redis-cli ping"]
  #    interval: 10s
  #    timeout: 5s
  #    retries: 3
  #  restart: always

  #rabbitmq:
  #  image: "${RABBITMQ_IMAGE}"
  #  #read_only: true
  #  deploy:
  #    resources:
  #      limits:
  #        memory: 4096M
  #  container_name: rabbitmq
  #  hostname: rabbitmq
  #  networks:
  #    - middleware
  #  ports:
  #    - 5672:5672
  #    - 15672:15672
  #  environment:
  #    TZ: Asia/Shanghai
  #    RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
  #    RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
  #  healthcheck:
  #    test: [ "CMD", "rabbitmqctl", "status"]
  #    interval: 5s
  #    timeout: 20s
  #    retries: 10
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - /data/rabbitmq/data/:/var/lib/rabbitmq/
  #  restart: always

  #kkfileview:
  #  image: "${KKFILEVIEW_IMAGE}"
  #  #read_only: true
  #  container_name: kkfileview
  #  deploy:
  #    resources:
  #      limits:
  #        memory: 4096M
  #  networks:
  #    - middleware
  #  ports:
  #    - "${KKFILEVIEW_PORT}:8012"
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - ./conf/kkfileview-application.properties:/opt/kkFileView-4.1.0-RELEASE/config/application.properties
  #  restart: always

  #db:
  #  image: "${POSTGRES_IMAGE}"
  #  #read_only: true
  #  container_name: pg
  #  deploy:
  #    resources:
  #      limits:
  #        memory: 8192M  
  #  ports:
  #    - "${POSTGRES_PORT}:5432"
  #  networks:
  #    - middleware
  #  environment:
  #    TZ: Asia/Shanghai
  #    POSTGRES_DB: "${POSTGRES_DB}"
  #    POSTGRES_USER: "${POSTGRES_USER}"
  #    POSTGRES_PASS: "${POSTGRES_PASS}"
  #    ALLOW_IP_RANGE: "0.0.0.0/0"
  #    POSTGRES_MULTIPLE_EXTENSIONS: "postgis,hstore,postgis_topology,postgis_raster,pgrouting"
  #    RUN_AS_ROOT: 'true'
  #  restart: always
  #  healthcheck:
  #    test: ["CMD-SHELL", "PGPASSWORD=${POSTGRES_PASS} pg_isready -h localhost -U ${POSTGRES_USER}"]
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - /data/postgres/data:/var/lib/postgresql
  #    - /data/postgres/dbbackups:/backups

  #dbbackups:
  #  image: "${POSTGRES_BACKUP_IMAGE}"
  #  #read_only: true
  #  deploy:
  #    resources:
  #      limits:
  #        memory: 4096M
  #  container_name: pg-backup
  #  hostname: pg-backups
  #  networks:
  #    - middleware
  #  environment:
  #    TZ: Asia/Shanghai
  #    DUMPPREFIX: PG_db
  #    POSTGRES_USER: "${POSTGRES_USER}"
  #    POSTGRES_PASS: "${POSTGRES_PASS}"
  #    POSTGRES_PORT: "5432"
  #    POSTGRES_HOST: "db"
  #  restart: always
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - /data/postgres/dbbackups:/backups
  #  depends_on:
  #    db:
  #      condition: service_healthy

  #elastic:
  #  image: "${ELASTIC_IMAGE}"
  #  container_name: elastic
  #  #read_only: true
  #  deploy:
  #    resources:
  #      limits:
  #        memory: 4096M
  #  networks:
  #    - middleware
  #  environment:
  #    TZ: Asia/Shanghai
  #    ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"  
  #    ES_JAVA_OPTS: "${ES_JAVA_OPTS}" 
  #  ports:
  #    - "${ELASTIC_PORT}:9200"
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - /data/elastic/data:/usr/share/elasticsearch/data
  #    - /data/elastic/logs:/usr/share/elasticsearch/logs
  #    - ./plugins:/usr/share/elasticsearch/plugins
  #    - ./conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #  ulimits:
  #    memlock:
  #      soft: -1
  #      hard: -1
  #  restart: always

  #geoserver:
  # image: "${GEOSERVER_IMAGE}"
  # container_name: geoserver
  # #read_only: true
  # deploy:
  #   resources:
  #     limits:
  #       memory: 4096M
  # ports:
  #   - "${GEOSERVER_PORT}:8080"
  # networks:
  #   - middleware
  # environment:
  #   TIMEZONE: 'Asia/Shanghai'
  #   GEOSERVER_DATA_DIR: /opt/geoserver/data
  #   GEOSERVER_ADMIN_USER: "${GEOSERVER_ADMIN_USER}"
  #   GEOSERVER_ADMIN_PASSWORD: "${GEOSERVER_ADMIN_PASSWORD}"
  # volumes:
  #  - /data/geoserver/data:/opt/geoserver/data
  # restart: always

networks:
  middleware:
    driver: bridge
